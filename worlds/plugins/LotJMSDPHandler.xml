<?xml version="1.0" encoding="iso-8859-1" ?> 
<!DOCTYPE muclient> 
<!--  Saved on Thursday, February 22, 2013, 1:59 PM   --> 
<!-- MuClient version 4.73 --> 
<muclient>
<plugin name="LotJMSDPHandler" author="@Johnson" id="b3aae34498d5bf19b5b2e2af" language="Lua" purpose="Handle MSDP messages and broadcast data" save_state="y" requires="4.73" version="0.52">
<description trim="y">
Legends of the Jedi MSDP Handler.

Purpose is to receive incoming MSDP messages and populate the global
table 'msdp' with the values as received so that MSDP under MUSHClient
can use partial refreshes of data.

This is based on GMCP_handler written by Lasher of AardwolfMud.


To use this plugin to send MSDP variables to your plugin, enter this into the top of your plugin's code:
  dofile(GetPluginInfo(GetPluginID(), 20) .. "LotJMSDPHelper.lua")
	
Then whenever you want to set a variable, use this syntax:
  myVariable = getmsdp("VARIABLE NAME")

</description>

</plugin>

<triggers>


</triggers>

<aliases>
<alias script="msdpdebug" match="^msdpdebug (.*)?$" enabled="y" regexp="y" sequence="100" ignore_case="y" />
<alias script="MSDP_Alias" match="sendmsdp *" enabled="y" send_to="12" sequence="100" />

</aliases>
<timers>

</timers>

<script>
<![CDATA[ 

local IAC, SB, SE, DO = 0xFF, 0xFA, 0xF0, 0xFD
local MSDP 		= 69
local MSDPDebug = tonumber(GetVariable("MSDPDebug")) or 0
msdp = {}
local sqldb = {}
local sqlfile = GetInfo(60) .. "\msdp.sqlite3"

require "tprint"

function msdpdebug(name, line, wildcards)
	newval = tonumber(wildcards[1])
	if not newval or newval > 2 or newval < 0 then
		ColourNote("darkorange", "", "MSDPDebug valid values are: 0 - off, 1 - simple, 2 - verbose")
		return
	end
	MSDPDebug = newval
	local msg = "off"
	if MSDPDebug == 1 then
		msg = "simple"
	elseif MSDPDebug == 2 then
		msg = "verbose"
	end
	ColourNote("darkorange", "", "MSDPDebug: " .. msg)
end

function MSDP_Alias(name, line, wildcards)
	if (wildcards[1] ~= nil) then
		Note("Send "..wildcards[1].." via MSDP frequency.")
		Send_MSDP_Packet(wildcards[1]) -- will be in msdphelper TODO
	end
end

-------------------------------------------------------------------------------
--   Mushclient callback function when telnet SB data received
-------------------------------------------------------------------------------
function OnPluginTelnetSubnegotiation (type, data)
	if type ~= MSDP then
		return
	end -- if not MSDP
	
	if MSDPDebug > 1 then ColourNote ("darkorange", "", data) end
	
    endpos = string.len(data)
    bName = false
    bValue = false
    bTable = false
    bIgnore = false
    variable = nil
    value = nil

    for i=1,endpos,1 do
      if string.byte(data,i) == 1 and bTable == false then
        if variable ~= nil and value ~= nil then
          StoreVariable(variable, value)
          variable = nil
          value = nil
        end -- if
        bName = true
        bValue = false
      elseif string.byte(data,i) == 2 and bTable == false then
        if value ~= nil then
          value = value.." "
        end -- if
        bName = false
        bValue = true
      elseif string.byte(data,i) == 3 then
        bTable = true
        bIgnore = true
      elseif string.byte(data,i) == 4 then
        bTable = false
      elseif bIgnore == true then
        bIgnore = false -- Just ignore one character.
      elseif bName == true then
        if variable == nil then
          variable = ""
        end -- if
        variable = variable..string.sub(data,i,i)
      elseif bValue == true then
        if value == nil then
          value = ""
        end -- if
        value = value..string.sub(data,i,i)
      end -- if
    end -- for

    if variable ~= nil then
      if value == nil then
        value = ""
      end -- if
      StoreVariable(variable, value)
    end -- if
end -- function OnPluginTelnetSubnegotiation

function StoreVariable (MSDP_var, MSDP_val)
	if MSDP_var == "SERVER_ID" then
		SendPkt ("\255\250\69\1PLUGIN_ID\2LotJMSPDHandler MUSHclient plugin (version 0.49)\255\240")
	else -- store the variable
		-- To get MSDP variables in external plugins:
		--	dofile(GetPluginInfo(GetPluginID(), 20) .. "LotJMSDPHelper.lua")
		--	myVariable = getmsdp("VARIABLE NAME")
		msdp[MSDP_var] = MSDP_val
		BroadcastPlugin(91,MSDP_var) -- broadcasts variable name so other plugins can see if they need to update
  	if MSDPDebug > 0 then ColourNote ("darkorange", "", MSDP_var..":"..msdp[MSDP_var]) end
	end -- if
end -- function StoreVariable



function Send_MSDP_Packet (what)
   assert (what, "Send_MSDP_Packet passed a nil message.")
   --SendPkt (string.char (IAC, SB, MSDP) .. 
   --        (string.gsub (what, "\255", "\255\255")) ..  -- IAC becomes IAC IAC
   --         string.char (IAC, SE))
   SendPkt ("\255\250\69" .. what .. "\255\240")
end -- Send_MSDP_Packet

function OnPluginInstall()
	BroadcastPlugin(1, "reload") -- tell other plugins to clear all msdp data
	if IsConnected() then
		-- pretend like we just logged in
		Send_MSDP_Packet ("\1LIST\2COMMANDS")
		Send_MSDP_Packet ("\1REPORT\2CHARACTERNAME\2SERVERID\2SERVERTIME\2SNIPPETVERSION\2AFFECTS\2ALIGNMENT\2HEALTH\2HEALTHMAX\2TOPLEVEL\2LEVELCOMBAT\2LEVELPILOTING\2LEVELENGINEERING\2LEVELHUNTING\2LEVELSMUGGLING\2LEVELDIPLOMACY\2LEVELLEADERSHIP\2LEVELFORCE\2LEVELESPIONAGE\2LEVELSLICER\2LEVELMEDIC\2LEVELSCIENCE\2COMMCHANNEL\2COMMENCRYPT\2OOCLIMIT\2OOCBREAK\2PLANET\2RACE\2CLAN\2PILOTING\2SHIPSPEED\2SHIPMAXSPEED\2SHIPHULL\2SHIPMAXHULL\2SHIPENERGY\2SHIPMAXENERGY\2SHIPSHIELD\2SHIPMAXSHIELD\2SHIPGALX\2SHIPGALY\2SHIPSYSX\2SHIPSYSY\2SHIPSYSZ\2SHIPHEADX\2SHIPHEADY\2SHIPHEADZ\2SHIPSYSNAME\2CLASS\2MANA\2MANAMAX\2WIMPY\2PRACTICE\2MONEYTOTAL\2MONEYINV\2MONEYBANK\2MOVEMENT\2MOVEMENTMAX\2HITROLL\2DAMROLL\2AC\2STR\2INT\2WIS\2DEX\2CON\2CHA\2STRPERM\2INTPERM\2WISPERM\2DEXPERM\2CONPERM\2CHAPERM\2OPPONENTHEALTH\2OPPONENTHEALTHMAX\2OPPONENT_LEVEL\2OPPONENTNAME\2AREA_NAME\2ROOMEXITS\2ROOMNAME\2ROOMVNUM\2WORLDTIME\2BOTTINGDELAY\2CURRENTAMMO\2MAXAMMO\2SHIELDENERGY\2LIGHTTIME\2MEDPACPOWER\2GRENADEROUNDS\2BLADEPOWER")
	end
end

function OnPluginSaveState()
	SetVariable("MSDPDebug", MSDPDebug)
end

function OnPluginTelnetRequest (type, data)
	if type == MSDP and data == "WILL" then
		return true
	end -- if
	
	if type == MSDP and data == "SENT_DO" then
		Note("Enabling MSDP.")
		
		--=======================
		-- check sql database exists/create it
		--=======================
		sqldb = sqlite3.open(sqlfile)
		
		
		Send_MSDP_Packet ("\1LIST\2COMMANDS")
		Send_MSDP_Packet ("\1REPORT\2CHARACTERNAME\2SERVERID\2SERVERTIME\2SNIPPETVERSION\2AFFECTS\2ALIGNMENT\2HEALTH\2HEALTHMAX\2TOPLEVEL\2LEVELCOMBAT\2LEVELPILOTING\2LEVELENGINEERING\2LEVELHUNTING\2LEVELSMUGGLING\2LEVELDIPLOMACY\2LEVELLEADERSHIP\2LEVELFORCE\2LEVELESPIONAGE\2LEVELSLICER\2LEVELMEDIC\2LEVELSCIENCE\2COMMCHANNEL\2COMMENCRYPT\2OOCLIMIT\2OOCBREAK\2PLANET\2RACE\2CLAN\2PILOTING\2SHIPSPEED\2SHIPMAXSPEED\2SHIPHULL\2SHIPMAXHULL\2SHIPENERGY\2SHIPMAXENERGY\2SHIPSHIELD\2SHIPMAXSHIELD\2SHIPGALX\2SHIPGALY\2SHIPSYSX\2SHIPSYSY\2SHIPSYSZ\2SHIPHEADX\2SHIPHEADY\2SHIPHEADZ\2SHIPSYSNAME\2CLASS\2MANA\2MANAMAX\2WIMPY\2PRACTICE\2MONEYTOTAL\2MONEYINV\2MONEYBANK\2MOVEMENT\2MOVEMENTMAX\2HITROLL\2DAMROLL\2AC\2STR\2INT\2WIS\2DEX\2CON\2CHA\2STRPERM\2INTPERM\2WISPERM\2DEXPERM\2CONPERM\2CHAPERM\2OPPONENTHEALTH\2OPPONENTHEALTHMAX\2OPPONENT_LEVEL\2OPPONENTNAME\2AREA_NAME\2ROOMEXITS\2ROOMNAME\2ROOMVNUM\2WORLDTIME\2BOTTINGDELAY\2CURRENTAMMO\2MAXAMMO\2SHIELDENERGY\2LIGHTTIME\2MEDPACPOWER\2GRENADEROUNDS\2BLADEPOWER")
		return true
	end -- if MSDP login needed (just sent DO)
	
	return false
end -- function OnPluginTelnetRequest

-------------------------------------------------------------------------------
function init_msdpdata()
	-- not used at the moment
end -- init_msdpdata
-------------------------------------------------------------------------------


function OnPluginDisable()
	EnablePlugin(GetPluginID(), true)
	ColourNote("white", "blue", "You are not allowed to disable the "..
	GetPluginInfo(GetPluginID(), 1).." plugin. It is necessary for other plugins.")
end

function msdpval(fieldname)
  if not IsConnected() then
    return ""
  end
	assert (fieldname, "nil fieldname passed to msdpval")
	local result = msdp[fieldname]

  if result ~= nil then -- variable was found in local msdp table
	  return result
  else
		return "" -- fail safely
	end
	return ""
end


]]>
</script>

</muclient>
